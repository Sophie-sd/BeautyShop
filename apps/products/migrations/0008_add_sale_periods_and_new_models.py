# Generated by Django 4.2.21 on 2025-10-14 15:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0007_create_new_product_model'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryFilterConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_brand_filter', models.BooleanField(default=True, verbose_name='Показувати фільтр Бренд')),
                ('show_group_filter', models.BooleanField(default=True, verbose_name='Показувати фільтр Група')),
                ('show_purpose_filter', models.BooleanField(default=True, verbose_name='Показувати фільтр Призначення')),
                ('show_price_filter', models.BooleanField(default=True, verbose_name='Показувати фільтр Ціна')),
                ('show_availability_filter', models.BooleanField(default=True, verbose_name='Показувати фільтр Наявність')),
                ('custom_filters', models.JSONField(blank=True, default=dict, help_text='Додаткові фільтри у форматі JSON', verbose_name='Кастомні фільтри')),
            ],
            options={
                'verbose_name': 'Конфігурація фільтрів категорії',
                'verbose_name_plural': 'Конфігурації фільтрів категорій',
            },
        ),
        migrations.CreateModel(
            name='ProductChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=50, verbose_name='Поле')),
                ('old_value', models.TextField(blank=True, verbose_name='Старе значення')),
                ('new_value', models.TextField(blank=True, verbose_name='Нове значення')),
                ('change_type', models.CharField(choices=[('price', 'Зміна ціни'), ('status', 'Зміна статусу'), ('visibility', 'Зміна видимості'), ('stock', 'Зміна кількості'), ('sale', 'Зміна акції'), ('other', 'Інше')], default='other', max_length=20, verbose_name='Тип зміни')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата зміни')),
            ],
            options={
                'verbose_name': 'Лог змін товару',
                'verbose_name_plural': 'Логи змін товарів',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SalePromotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Назва акції')),
                ('description', models.TextField(blank=True, verbose_name='Опис')),
                ('discount_type', models.CharField(choices=[('percentage', 'Відсоток'), ('fixed', 'Фіксована сума')], default='percentage', max_length=20, verbose_name='Тип знижки')),
                ('discount_value', models.DecimalField(decimal_places=2, help_text='Відсоток або сума знижки', max_digits=10, verbose_name='Розмір знижки')),
                ('start_date', models.DateTimeField(verbose_name='Дата початку')),
                ('end_date', models.DateTimeField(verbose_name='Дата закінчення')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('show_badge', models.BooleanField(default=True, verbose_name='Показувати бейдж "Акція"')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Створено')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Оновлено')),
            ],
            options={
                'verbose_name': 'Масова акція',
                'verbose_name_plural': 'Масові акції',
                'ordering': ['-start_date'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='sale_end_date',
            field=models.DateTimeField(blank=True, help_text='Акція завершиться автоматично після цієї дати', null=True, verbose_name='Дата закінчення акції'),
        ),
        migrations.AddField(
            model_name='product',
            name='sale_start_date',
            field=models.DateTimeField(blank=True, help_text='Акція почнеться автоматично з цієї дати', null=True, verbose_name='Дата початку акції'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category', 'is_active'], name='products_pr_categor_50f5f1_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_active', 'is_sale', 'is_new', 'is_top'], name='products_pr_is_acti_48ea0f_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='products_pr_sku_ca0cdc_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['slug'], name='products_pr_slug_3edc0c_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['created_at'], name='products_pr_created_52f0d7_idx'),
        ),
        migrations.AddField(
            model_name='salepromotion',
            name='categories',
            field=models.ManyToManyField(blank=True, help_text='Застосувати акцію до всіх товарів цих категорій', related_name='promotions', to='products.category', verbose_name='Категорії'),
        ),
        migrations.AddField(
            model_name='salepromotion',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_promotions', to=settings.AUTH_USER_MODEL, verbose_name='Створив'),
        ),
        migrations.AddField(
            model_name='salepromotion',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='promotions', to='products.product', verbose_name='Товари'),
        ),
        migrations.AddField(
            model_name='productchangelog',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_logs', to='products.product', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='productchangelog',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Користувач'),
        ),
        migrations.AddField(
            model_name='categoryfilterconfig',
            name='category',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='filter_config', to='products.category', verbose_name='Категорія'),
        ),
        migrations.AddIndex(
            model_name='salepromotion',
            index=models.Index(fields=['is_active', 'start_date', 'end_date'], name='products_sa_is_acti_ab1021_idx'),
        ),
        migrations.AddIndex(
            model_name='productchangelog',
            index=models.Index(fields=['product', '-created_at'], name='products_pr_product_f2fdac_idx'),
        ),
        migrations.AddIndex(
            model_name='productchangelog',
            index=models.Index(fields=['change_type', '-created_at'], name='products_pr_change__b042da_idx'),
        ),
    ]
