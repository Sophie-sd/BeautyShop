#!/usr/bin/env bash
# Build script –¥–ª—è Render.com
set -e  # –ó—É–ø–∏–Ω–∏—Ç–∏ –ø—Ä–∏ –ø–æ–º–∏–ª–∫–∞—Ö

echo "üî® BUILD PROCESS STARTED"
echo "========================"
echo ""

# –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
pip install -r requirements.txt
echo "‚úÖ –ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
echo ""

# –°—Ç–≤–æ—Ä—é—î–º–æ –ø–∞–ø–∫—É –¥–ª—è –º–µ–¥—ñ–∞ (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
mkdir -p media
chmod 755 media

# –ó–±–∏—Ä–∞—î–º–æ —Å—Ç–∞—Ç–∏—á–Ω—ñ —Ñ–∞–π–ª–∏
echo "üìÅ –ó–±–∏—Ä–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤..."
python manage.py collectstatic --no-input
echo "‚úÖ –°—Ç–∞—Ç–∏—á–Ω—ñ —Ñ–∞–π–ª–∏ –∑—ñ–±—Ä–∞–Ω–æ"
echo ""

# –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –º—ñ–≥—Ä–∞—Ü—ñ—ó
echo "üóÑÔ∏è  –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –º—ñ–≥—Ä–∞—Ü—ñ–π –±–∞–∑–∏ –¥–∞–Ω–∏—Ö..."
python manage.py migrate --no-input
echo "‚úÖ –ú—ñ–≥—Ä–∞—Ü—ñ—ó –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ"
echo ""

# –°—Ç–≤–æ—Ä—é—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó (–±–µ–∑–ø–µ—á–Ω–æ)
echo "üìÇ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —Ç–æ–≤–∞—Ä—ñ–≤..."
python manage.py create_categories
echo "‚úÖ –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó —Å—Ç–≤–æ—Ä–µ–Ω–æ"
echo ""

# –°—Ç–≤–æ—Ä—é—î–º–æ —Å—É–ø–µ—Ä—é–∑–µ—Ä–∞ —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î
echo "üë§ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—É–ø–µ—Ä—é–∑–µ—Ä–∞..."
python manage.py shell -c "
from django.contrib.auth import get_user_model
import os
User = get_user_model()
admin_email = os.getenv('ADMIN_EMAIL', 'beautyshop.supp@gmail.com')
admin_password = os.getenv('ADMIN_PASSWORD', 'ChangeMe123!')
if not User.objects.filter(email=admin_email).exists():
    user = User.objects.create_superuser(
        username='admin',
        email=admin_email,
        password=admin_password,
        phone='+380681752654',
        first_name='Admin',
        last_name='BeautyShop'
    )
    print('‚úÖ Superuser —Å—Ç–≤–æ—Ä–µ–Ω–æ: ' + admin_email)
else:
    print('‚ö†Ô∏è Superuser –≤–∂–µ —ñ—Å–Ω—É—î: ' + admin_email)
"
echo ""

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π —ñ–º–ø–æ—Ä—Ç —Ç–æ–≤–∞—Ä—ñ–≤ –∑ –≥–æ—Ç–æ–≤–∏—Ö JSON (–∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤–∂–µ –Ω–∞ Cloudinary)
if [ "$AUTO_IMPORT_PRODUCTS" = "true" ]; then
    echo "========================"
    echo "üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ù–ò–ô –Ü–ú–ü–û–†–¢ –¢–û–í–ê–†–Ü–í"
    echo "========================"
    echo ""
    
    if [ -d "products_data" ]; then
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î JSON —Ñ–∞–π–ª–∏
        json_count=$(ls -1 products_data/*.json 2>/dev/null | wc -l)
        
        if [ "$json_count" -gt 0 ]; then
            echo "üì¶ –ó–Ω–∞–π–¥–µ–Ω–æ JSON —Ñ–∞–π–ª—ñ–≤: $json_count"
            echo "üîÑ –ó–∞–ø—É—Å–∫ –ø–æ–≤–Ω–æ–≥–æ —Ä–µ—ñ–º–ø–æ—Ä—Ç—É —Ç–æ–≤–∞—Ä—ñ–≤..."
            echo ""
            
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–æ–≤–Ω–∏–π —Ä–µ—ñ–º–ø–æ—Ä—Ç (–æ—á–∏—â–µ–Ω–Ω—è + —ñ–º–ø–æ—Ä—Ç –≤ –æ–¥–Ω—ñ–π –∫–æ–º–∞–Ω–¥—ñ)
            python manage.py reimport_products --input products_data
            
            echo ""
            echo "‚úÖ –†–µ—ñ–º–ø–æ—Ä—Ç —Ç–æ–≤–∞—Ä—ñ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!"
            
            # –í–∏–≤–æ–¥–∏–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            echo ""
            echo "üìä –§—ñ–Ω–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
            python manage.py shell -c "
from apps.products.models import Product, Category
total_products = Product.objects.count()
total_categories = Category.objects.filter(is_active=True).count()
print(f'  ‚Ä¢ –í—Å—å–æ–≥–æ —Ç–æ–≤–∞—Ä—ñ–≤: {total_products}')
print(f'  ‚Ä¢ –ê–∫—Ç–∏–≤–Ω–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π: {total_categories}')
for cat in Category.objects.filter(is_active=True).order_by('sort_order'):
    count = Product.objects.filter(category=cat).count()
    if count > 0:
        print(f'  ‚Ä¢ {cat.name}: {count} —Ç–æ–≤–∞—Ä—ñ–≤')
"
        else
            echo "‚ö†Ô∏è JSON —Ñ–∞–π–ª–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ –≤ –ø–∞–ø—Ü—ñ products_data/"
            echo "   –Ü–º–ø–æ—Ä—Ç –ø—Ä–æ–ø—É—â–µ–Ω–æ"
        fi
    else
        echo "‚ùå –ü–∞–ø–∫–∞ products_data –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞"
        echo ""
        echo "üìù –î–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ –≤–∏–∫–æ–Ω–∞–π—Ç–µ –ª–æ–∫–∞–ª—å–Ω–æ:"
        echo "   1. python manage.py import_products_cloudinary --limit 2500"
        echo "   2. python manage.py export_products_json"
        echo "   3. git add products_data/ && git commit -m 'Add products data' && git push"
        echo ""
        echo "   –ü—ñ—Å–ª—è —Ü—å–æ–≥–æ —Ç–æ–≤–∞—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —ñ–º–ø–æ—Ä—Ç—É—é—Ç—å—Å—è –ø—Ä–∏ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –¥–µ–ø–ª–æ—ó"
    fi
else
    echo "========================"
    echo "‚ÑπÔ∏è  –Ü–ú–ü–û–†–¢ –¢–û–í–ê–†–Ü–í –í–ò–ú–ö–ù–ï–ù–û"
    echo "========================"
    echo ""
    echo "–î–ª—è —É–≤—ñ–º–∫–Ω–µ–Ω–Ω—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ —ñ–º–ø–æ—Ä—Ç—É –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å:"
    echo "AUTO_IMPORT_PRODUCTS=true –≤ Environment Variables –Ω–∞ Render"
fi

echo ""
echo "========================"
echo "‚úÖ BUILD COMPLETED SUCCESSFULLY!"
echo "========================"